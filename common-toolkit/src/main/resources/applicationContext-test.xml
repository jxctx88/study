<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
							 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
							  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
							 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
							 ">

    <context:annotation-config />
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <!-- 
   <tx:annotation-driven />
    <context:component-scan base-package="com.web.service.impl">
        
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> -->
    <!--  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="removeAbandoned" value="true" />
		<property name="logAbandoned" value="true" />
		<property name="maxWait" value="20000" />
		<property name="maxActive" value="100" />
		<property name="validationQuery" value="select 1 " />
		<property name="initialSize" value="20" />
		<property name="minIdle" value="5" />
		<property name="maxIdle" value="20" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/test?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="111111" />		
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.web.service.pojo" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:ibatis/*.xml</value>
			</list>
		</property>
	</bean>	-->	   
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="8" />  
        <property name="testOnBorrow" value="true" />  
    </bean>  
      
    <bean id="connectionFactory1" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="192.168.1.1" p:port="6379"  p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisStringTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory1" />  
        <property name="enableTransactionSupport" value="true"></property>
    </bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="connectionFactory1">
		<!--  <property name="keySerializer">  
       		 <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
    	</property>  -->
    		
	</bean>     
	<bean id="redisTemplate1" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="connectionFactory1">
		  <property name="keySerializer">  
       		 <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
    	</property>  
    	  <!-- 
		  <property name="valueSerializer">  
       		 <bean class=" org.springframework.data.redis.serializer.JacksonJsonRedisSerializer" />  
    	</property>      --> 	
	</bean>  	     
	   
    <bean id="redisService" class="cn.memedai.common.toolkit.redis.spring.RedisServiceImpl">
    	<property name="template" ref="redisTemplate" />
    	<property name="template1" ref="redisTemplate1" />
    	<property name="listOps" ref="redisTemplate" />
    	<property name="stringTemplate" ref="redisStringTemplate" />
    </bean>
     <!-- 
    <bean id="userDao" class="com.x.dao.impl.UserDao" /> 
    	 
    <bean id="productMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
     <!--sqlSessionFactory属性指定要用到的SqlSessionFactory实例--> 
    <!--   <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
     <!--mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象--> 
    <!--   <property name="mapperInterface" value="com.web.service.ProductRepository" /> 
  </bean> 
  <bean id="orderMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
     <property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
     <property name="mapperInterface" value="com.web.service.OrderRepository" /> 
  </bean> -->
  
    
  <!--  	
    <bean id="scanControll" class="com.web.service.ScanControll" init-method="init">
    	<constructor-arg>
    		<value>com.web</value>
    	</constructor-arg>
    	<constructor-arg>
    	<value>localhost:2181,localhost:2182</value>
    	</constructor-arg>
    	<constructor-arg>
    	<value>userCenter</value>
    	</constructor-arg>    
    </bean>-->
</beans>